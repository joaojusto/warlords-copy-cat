{"version":3,"sources":["DynamicTileMap.js","TerrainGen.js","App.js","serviceWorker.js","index.js"],"names":["controls","config","scene","create","map","this","make","tilemap","tileWidth","tileHeight","tiles","addTilesetImage","console","log","spawnPoint","terrainLayer","createBlankDynamicLayer","terrainMatrix","width","height","seed","Math","random","noise","Noise","zoom","min","max","bellow0","above0","matrix","range","y","x","value","perlin2","waterLevel","sandLevel","isSand","level","isWater","isTerrain","sandTile","length","sample","WATER_ID","topLeft","progress","top","topRight","left","right","bottomLeft","bottom","bottomRight","SAND_ID","tileType","tile","FOREST_ID","MOUNTAIN_ID","TERRAIN_ID","tileTypeFactory","normalized","row","generator","finder","EasyStar","js","setGrid","setAcceptableTiles","costMatrix","setCost","cost","setTileCost","forEach","includes","putTileAt","convertLayerToStatic","cameras","add","minimapConfig","setZoom","setName","setBackgroundColor","centerOn","player","physics","sprite","setDisplaySize","setDisplayOrigin","main","setBounds","setScroll","currentMovement","graphics","playerState","movementPoints","clearOldMovement","movement","destroy","move","path","isEqual","tweens","currentTurn","targets","duration","startFollow","timeline","onComplete","stopFollow","currentCost","doMove","movementState","totalCost","nextTurns","indicators","nextIndicators","slice","reduce","state","push","fillStyle","circle","Phaser","Geom","Circle","fillCircleShape","input","on","pointer","worldX","worldY","toX","floor","toY","fromX","fromY","findPath","calculate","error","cursors","keyboard","createCursorKeys","controlConfig","camera","up","down","zoomIn","addKey","Input","Keyboard","KeyCodes","Q","zoomOut","E","acceleration","drag","maxSpeed","Cameras","Controls","SmoothedKeyControl","update","time","delta","Clamp","preload","load","setBaseURL","process","image","default","arcade","gravity","type","AUTO","parent","pixelArt","Game","App","className","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a19b66f7.chunk.js","sourcesContent":["import Phaser, { Game } from \"phaser\";\nimport EasyStar from \"easystarjs\";\nimport { isEqual, includes } from \"lodash\";\n\nimport game from \"./Game\";\nimport generator from \"./TerrainGen\";\n\nconst physics = {\n  default: \"arcade\",\n  arcade: {\n    gravity: { y: 0 }\n  }\n};\n\nconst scene = {\n  create,\n  update,\n  preload\n};\n\nconst config = {\n  scene,\n  physics,\n  type: Phaser.AUTO,\n  width: 800,\n  height: 600,\n  parent: \"App\",\n  pixelArt: true\n};\n\nconst minimapConfig = {\n  width: 102,\n  height: 102,\n  margin: 10,\n  background: 0x002244,\n  name: \"minimap\"\n};\n\nexport const TERRAIN_ID = [2];\nexport const FOREST_ID = [4, 5, 6];\nexport const SAND_ID = [8, 9, 10, 11, 12, 13, 14, 15];\nexport const CASTLE_ID = [];\nexport const MOUNTAIN_ID = [1];\nexport const WATER_ID = [3, 7];\nconst MAP_WIDTH = 100;\nconst MAP_HEIGHT = 100;\n// const SEED = 0.8444330836642344;\n\nfunction preload() {\n  this.load.setBaseURL(`${process.env.PUBLIC_URL}`);\n  this.load.image(\"tiles\", \"tilesets/tileset-extruded.png\");\n  this.load.image(\"warrior\", \"warrior.png\");\n  // this.load.tilemapTiledJSON(\"map\", \"/tilemaps/copycat.json\");\n}\n\nlet controls;\n\nfunction create() {\n  const map = this.make.tilemap({ tileWidth: 128, tileHeight: 128 });\n  const { tileWidth, tileHeight } = map;\n  const tiles = map.addTilesetImage(\n    \"tilemap\",\n    \"tiles\",\n    tileWidth,\n    tileHeight,\n    1,\n    2\n  );\n  console.log(\"here\", tileWidth, tileHeight);\n  let terrainLayer = map.createBlankDynamicLayer(\n    \"terrain\",\n    tiles,\n    0,\n    0,\n    MAP_WIDTH,\n    MAP_HEIGHT,\n    tileWidth,\n    tileHeight\n  );\n\n  let spawnPoint;\n  const terrainMatrix = generator(MAP_WIDTH, MAP_HEIGHT);\n\n  const finder = new EasyStar.js();\n  finder.setGrid(terrainMatrix);\n  finder.setAcceptableTiles([...TERRAIN_ID, ...MOUNTAIN_ID, ...FOREST_ID]);\n  // finder.enableDiagonals();\n  // finder.enableCornerCutting();\n  const costMatrix = [];\n  const setCost = (tile, x, y, cost) => {\n    finder.setTileCost(tile, cost);\n    costMatrix[y] = costMatrix[y] || [];\n    costMatrix[y][x] = cost;\n  };\n\n  terrainMatrix.forEach((row, y) =>\n    row.forEach((tile, x) => {\n      if (!spawnPoint && !includes(WATER_ID, tile)) spawnPoint = { x, y };\n      terrainLayer.putTileAt(tile, x, y);\n      if (includes(TERRAIN_ID, tile)) setCost(tile, x, y, 1);\n      if (includes(FOREST_ID, tile)) setCost(tile, x, y, 2);\n      if (includes(MOUNTAIN_ID, tile)) setCost(tile, x, y, 3);\n    })\n  );\n\n  terrainLayer = map.convertLayerToStatic(terrainLayer);\n\n  const { width, height } = terrainLayer;\n\n  this.cameras\n    .add(\n      config.width - minimapConfig.width - minimapConfig.margin,\n      minimapConfig.margin,\n      minimapConfig.width,\n      minimapConfig.height\n    )\n    .setZoom((minimapConfig.height - 2) / height)\n    .setName(minimapConfig.name)\n    .setBackgroundColor(minimapConfig.background)\n    .centerOn(width / 2, height / 2);\n\n  const player = this.physics.add\n    .sprite(spawnPoint.x * tileWidth, spawnPoint.y * tileHeight, \"warrior\")\n    .setDisplaySize(24, 24)\n    .setDisplayOrigin(-42, -44);\n\n  this.cameras.main.setBounds(0, 0, width, height);\n  this.cameras.main.setScroll(\n    -(this.cameras.main.width / 2) + width / 2,\n    -(this.cameras.main.height / 2) + height / 2\n  );\n  this.cameras.main.centerOn(player.x, player.y);\n\n  let graphics = this.add.graphics();\n\n  const MOVEMENT_POINTS = 4;\n  const playerState = { movementPoints: MOVEMENT_POINTS };\n  let currentMovement;\n\n  const doMove = movement => {\n    const tweens = movement.currentTurn.map(({ x, y }) => ({\n      targets: player,\n      x: { value: x * tileWidth, duration: 200 },\n      y: { value: y * tileHeight, duration: 200 }\n    }));\n    this.cameras.main.startFollow(player);\n    this.tweens.timeline({\n      tweens,\n      onComplete: () => {\n        this.cameras.main.stopFollow(player);\n        clearOldMovement(movement);\n      }\n    });\n    playerState.movementPoints -= movement.currentCost;\n  };\n\n  const clearOldMovement = movement => {\n    graphics.destroy();\n    graphics = this.add.graphics();\n    movement = null;\n  };\n\n  const move = path => {\n    if (!path) return;\n\n    console.log(currentMovement && currentMovement.path, path);\n\n    if (currentMovement && isEqual(currentMovement.path, path)) {\n      console.log(\"here\");\n      return doMove(currentMovement);\n    } else if (currentMovement) {\n      clearOldMovement(currentMovement);\n    }\n\n    const movementState = {\n      path,\n      currentCost: 0,\n      totalCost: 0,\n      currentTurn: [],\n      nextTurns: [],\n      indicators: [],\n      nextIndicators: []\n    };\n\n    const pathReducer = (state, { x, y }) => {\n      const cost = costMatrix[y][x];\n      const totalCost = state.totalCost + cost;\n      const currentTurn = [...state.currentTurn];\n      const nextTurns = [...state.nextTurns];\n      let currentCost = state.currentCost;\n\n      if (totalCost <= playerState.movementPoints) {\n        currentTurn.push({ x, y });\n        currentCost = totalCost;\n      } else nextTurns.push({ x, y });\n\n      return { path, currentCost, totalCost, currentTurn, nextTurns };\n    };\n\n    const movement = path\n      .slice(1, path.length)\n      .reduce(pathReducer, movementState);\n\n    graphics.fillStyle(0xffffff, 1); // color: 0xRRGGBB\n    movement.indicators = movement.currentTurn.map(({ x, y }) => {\n      const circle = new Phaser.Geom.Circle(\n        x * tileWidth + tileWidth / 2,\n        y * tileHeight + tileHeight / 2,\n        8\n      );\n      graphics.fillCircleShape(circle);\n      return circle;\n    });\n\n    graphics.fillStyle(0xff0000, 1); // color: 0xRRGGBB\n    movement.nextIndicators = movement.nextTurns.map(({ x, y }) => {\n      const circle = new Phaser.Geom.Circle(\n        x * tileWidth + tileWidth / 2,\n        y * tileHeight + tileHeight / 2,\n        8\n      );\n      graphics.fillCircleShape(circle);\n      return circle;\n    });\n    console.log(\"here\", movement);\n    currentMovement = movement;\n  };\n\n  this.input.on(\"pointerdown\", function(pointer) {\n    const { worldX, worldY } = pointer;\n    const toX = Math.floor(worldX / tileWidth);\n    const toY = Math.floor(worldY / tileHeight);\n    const fromX = Math.floor(player.x / tileWidth);\n    const fromY = Math.floor(player.y / tileHeight);\n\n    try {\n      finder.findPath(fromX, fromY, toX, toY, move);\n      finder.calculate();\n    } catch (error) {\n      console.error(\"Ups! Out of scope :S\");\n    }\n  });\n\n  const cursors = this.input.keyboard.createCursorKeys();\n\n  const controlConfig = {\n    camera: this.cameras.main,\n    left: cursors.left,\n    right: cursors.right,\n    up: cursors.up,\n    down: cursors.down,\n    zoomIn: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.Q),\n    zoomOut: this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.E),\n    acceleration: 2.8,\n    drag: 0.6,\n    maxSpeed: 200.0\n  };\n\n  controls = new Phaser.Cameras.Controls.SmoothedKeyControl(controlConfig);\n}\n\nfunction update(time, delta) {\n  controls.update(delta);\n  this.cameras.main.setZoom(Phaser.Math.Clamp(this.cameras.main.zoom, 0.08, 1));\n}\n\nnew Game(config);\n","import { Noise } from \"noisejs\";\nimport { findLast, range, sample, sortBy } from \"lodash\";\nimport { progress } from \"@popmotion/popcorn\";\n\nimport {\n  TERRAIN_ID,\n  FOREST_ID,\n  SAND_ID,\n  CASTLE_ID,\n  MOUNTAIN_ID,\n  WATER_ID\n} from \"./DynamicTileMap\";\n\nconst ZOOM_FACTOR = 12;\n\nexport default (width, height, seed = Math.random()) => {\n  const noise = new Noise();\n  noise.seed(seed);\n  const zoom = (width * ZOOM_FACTOR) / 100;\n\n  let min = 0;\n  let max = 0;\n  let bellow0 = 0;\n  let above0 = 0;\n\n  const matrix = range(height).map(y => {\n    return range(width).map(x => {\n      const value = noise.perlin2(x / zoom, y / zoom);\n\n      min = value < min ? value : min;\n      max = value > max ? value : max;\n\n      if (value < 0) bellow0++;\n      else above0++;\n\n      return value;\n    });\n  });\n\n  // let islands = [];\n\n  // const border = 0.2;\n  const waterLevel = 0.45;\n  const sandLevel = waterLevel + 0.1;\n\n  // const isAdjacent = (x, y) => island =>\n  //   (x + 1 === island.x || x - 1 === island.x || x === island.x) &&\n  //   (y + 1 === island.y || y - 1 === island.y || y === island.y);\n\n  const isSand = level => level >= waterLevel && level < sandLevel;\n  const isWater = level => level < waterLevel;\n  const isTerrain = level => !isSand(level) && !isWater(level);\n\n  const sandTile = (matrix, x, y) => {\n    if (y - 1 < 0 || y + 1 >= matrix.length) return sample(WATER_ID);\n    if (x - 1 < 0 || x + 1 >= matrix.length) return sample(WATER_ID);\n\n    const topLeft = progress(min, max, matrix[y - 1][x - 1]);\n    const top = progress(min, max, matrix[y - 1][x]);\n    const topRight = progress(min, max, matrix[y - 1][x + 1]);\n    const left = progress(min, max, matrix[y][x - 1]);\n    const right = progress(min, max, matrix[y][x + 1]);\n    const bottomLeft = progress(min, max, matrix[y + 1][x - 1]);\n    const bottom = progress(min, max, matrix[y + 1][x]);\n    const bottomRight = progress(min, max, matrix[y + 1][x + 1]);\n\n    if (\n      !isTerrain(top) &&\n      !isTerrain(left) &&\n      !isTerrain(right) &&\n      !isTerrain(bottom)\n    )\n      return sample(WATER_ID);\n\n    if (isTerrain(bottom) && isTerrain(right)) return SAND_ID[7];\n    if (isTerrain(top) && isTerrain(right)) return SAND_ID[2];\n    if (isTerrain(bottom) && isTerrain(left)) return SAND_ID[5];\n    if (isTerrain(top) && isTerrain(left)) return SAND_ID[0];\n\n    if (isTerrain(top)) return SAND_ID[1];\n    if (isTerrain(bottom)) return SAND_ID[6];\n    if (isTerrain(right)) return SAND_ID[3];\n    if (isTerrain(left)) return SAND_ID[4];\n\n    if (topLeft < waterLevel && top < waterLevel && topRight < waterLevel) {\n      return SAND_ID[6];\n    }\n\n    if (\n      bottomLeft < waterLevel &&\n      bottom < waterLevel &&\n      bottomRight < waterLevel\n    ) {\n      return SAND_ID[1];\n    }\n  };\n\n  const tileType = matrix => (tile, x, y) => {\n    const value = progress(min, max, tile);\n    if (isWater(value)) return sample(WATER_ID);\n    if (isSand(value)) return sandTile(matrix, x, y);\n    // if (value >= 0.6 && value < 0.61) return sample(CASTLE_ID);\n    if (value >= 0.7 && value < 0.8) return sample(FOREST_ID);\n    if (value >= 0.8) return sample(MOUNTAIN_ID);\n    return sample(TERRAIN_ID);\n  };\n\n  const tileTypeFactory = tileType(matrix);\n\n  const normalized = matrix.map((row, y) =>\n    row.map((tile, x) => {\n      // if (y < height * border || y > height * (1 - border)) return WATER_ID;\n      // if (x < width * border || x > width * (1 - border)) return WATER_ID;\n\n      // const value = progress(min, max, tile);\n      // if (value < waterLevel) return WATER_ID;\n\n      return tileTypeFactory(tile, x, y);\n      // const adjcentTiles = findLast(islands, island =>\n      //   findLast(island, isAdjacent(x, y))\n      // );\n      //\n      // if (adjcentTiles) {\n      //   adjcentTiles.push({ x, y, type: tileType(tile) });\n      // } else {\n      //   islands.push([{ x, y, type: tileType(tile) }]);\n      // }\n\n      // return WATER_ID;\n    })\n  );\n\n  console.log(`Min: ${min}, Max: ${max}`);\n  console.log(`<0: ${bellow0}, >0: ${above0}`);\n  console.log(`Seed: ${seed}`);\n\n  // console.log(islands.length, islands);\n\n  // sortBy(islands, \"length\")\n  //   .reverse()[0]\n  //   .forEach(({ x, y, type }) => (normalized[y][x] = type));\n  return normalized;\n};\n\nexport const toEmoji = map =>\n  map.map(row => row.map(column => (column === 0 ? \"🌊\" : \"🌲\")));\n\nexport const toConsole = map =>\n  map.forEach((row, index) => {\n    console.log(`${index}: ${row.join(\"\")}`);\n  });\n","import React from \"react\";\n\nimport \"./App.css\";\n\n// import \"./StaticTileMap\";\nimport \"./DynamicTileMap\";\n\nfunction App() {\n  return <div className=\"App\" id=\"App\"></div>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}